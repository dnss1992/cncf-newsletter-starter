<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>CNCF Updates ‚Äî {{ date_str }}</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <!-- Bootstrap 5 -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <style>
    body { background: #f8f9fa; }
    .badge-type { text-transform: uppercase; letter-spacing: .02em; }
    .item-card .card-title { margin-bottom: .25rem; font-weight: 600; }
    .item-card .meta { font-size: .875rem; color: #6c757d; }
    .truncate-2 { display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden; }
    .sticky-top-lite { position: sticky; top: 0; z-index: 100; background: #f8f9fa; padding-top: .5rem; }
  </style>
</head>
<body>
<nav class="navbar navbar-expand-lg bg-body-tertiary border-bottom">
  <div class="container">
    <a class="navbar-brand" href="#">CNCF Updates</a>
    <div class="navbar-nav ms-auto">
      <a class="nav-link" href="about.html">About</a>
    </div>
  </div>
</nav>

<div class="container my-4">
  <!-- Filters -->
  <div class="sticky-top-lite pb-2 border-bottom">
    <div class="row g-2 align-items-end">
      <div class="col-md-4">
        <label class="form-label">Project</label>
        <select id="filterProject" class="form-select">
          <option value="">All projects</option>
          {% for p in projects %}
          <option value="{{ p }}">{{ p }}</option>
          {% endfor %}
        </select>
      </div>
      <div class="col-md-3">
        <label class="form-label">Type</label>
        <select id="filterType" class="form-select">
          <option value="">All types</option>
          {% for t in types %}
          <option value="{{ t }}">{{ t }}</option>
          {% endfor %}
        </select>
      </div>
      <div class="col-md-5">
        <label class="form-label">Search</label>
        <input id="filterSearch" type="text" class="form-control" placeholder="Search title or summary..." />
      </div>
    </div>
    <div class="d-flex gap-2 mt-2">
      <button id="btnClear" class="btn btn-outline-secondary btn-sm">Clear</button>
      <div id="count" class="ms-auto text-muted small">0 items</div>
    </div>
  </div>
  <!-- About (collapsible card) -->
  <div class="mt-3">
    <div class="card shadow-sm">
      <div class="card-body">
        <div class="d-flex align-items-center justify-content-between">
          <h2 class="h6 mb-0">About CNCF News</h2>
          <button class="btn btn-sm btn-outline-secondary" type="button" data-bs-toggle="collapse" data-bs-target="#aboutCard" aria-expanded="false">
            Show/Hide
          </button>
        </div>
        <div id="aboutCard" class="collapse mt-3">
          <p><strong>CNCF News</strong> curates releases, blogs, and advisories from all CNCF Graduated projects, built from official GitHub releases and RSS feeds.</p>
          <ul class="mb-2">
            <li>üöÄ New releases</li>
            <li>üìù Community posts & RFCs</li>
          </ul>
        </div>
      </div>
    </div>
  </div>
  <!-- Results -->
  <div id="items" class="mt-3 row row-cols-1 gy-3">
    <!-- Cards injected by JS -->
  </div>
</div>

<footer class="border-top py-4">
  <div class="container small text-muted">
    Built from GitHub Releases and project RSS feeds. Filter locally without reloading.
  </div>
</footer>

<script>
// Load items.json and render
(async function(){
  const resp = await fetch('items.json', {cache: 'no-store'});
  const items = await resp.json();

  // Normalize and precompute display fields
  const data = items.map((it, idx) => ({
    id: idx,
    project: it.project || '',
    type: (it.type || '').toLowerCase(),
    title: it.title || 'Untitled',
    url: it.url || '#',
    date: it.published_at || '',
    summary: (it.summary || it.summary_raw || '').replace(/\\n+/g, ' ').trim(),
    version: it.version || ''
  }));

  const $items = document.getElementById('items');
  const $project = document.getElementById('filterProject');
  const $type = document.getElementById('filterType');
  const $search = document.getElementById('filterSearch');
  const $count = document.getElementById('count');
  const $clear = document.getElementById('btnClear');

  function badgeForType(t){
    const map = { release: 'primary', blog: 'success', pr: 'warning', issue: 'secondary', advisory: 'danger' };
    return map[t] || 'secondary';
  }

  function matches(d){
    const p = $project.value;
    const t = $type.value;
    const q = $search.value.trim().toLowerCase();
    if (p && d.project !== p) return false;
    if (t && d.type !== t) return false;
    if (q && !(d.title.toLowerCase().includes(q) || d.summary.toLowerCase().includes(q))) return false;
    return true;
  }

  function card(d){
    const ver = d.version ? `<span class="ms-2 text-muted small">(${d.version})</span>` : '';
    return `
      <div class="col">
        <div class="card shadow-sm item-card">
          <div class="card-body">
            <div class="d-flex justify-content-between align-items-start">
              <h5 class="card-title">${escapeHtml(d.title)}${ver}</h5>
              <span class="badge bg-${badgeForType(d.type)} badge-type">${escapeHtml(d.type || '')}</span>
            </div>
            <div class="meta mb-2">
              <span class="badge text-bg-light">${escapeHtml(d.project)}</span>
              <span class="ms-2">${escapeHtml((d.date || '').replace('T',' ').replace('Z',' UTC'))}</span>
            </div>
            <p class="card-text truncate-2">${escapeHtml(d.summary || '')}</p>
            <a class="btn btn-sm btn-outline-primary" href="${d.url}" target="_blank" rel="noopener">Open</a>
          </div>
        </div>
      </div>`;
  }

  function render(){
    const filtered = data.filter(matches);
    $items.innerHTML = filtered.map(card).join('');
    $count.textContent = `${filtered.length} item${filtered.length === 1 ? '' : 's'}`;
  }

  function escapeHtml(s){
    return (s || '').replace(/[&<>\"']/g, m => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[m]));
  }

  // Events
  [$project, $type, $search].forEach(el => el.addEventListener('input', render));
  $clear.addEventListener('click', () => { $project.value=''; $type.value=''; $search.value=''; render(); });

  render();
})();
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>
</body>
</html>
