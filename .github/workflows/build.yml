name: Build & Deploy CNCF Newsletter to Pages

on:
  schedule:
    - cron: '0 3 * * *'   # daily 03:00 UTC (~08:30 IST)
  workflow_dispatch:

permissions:
  contents: read
  pages: write        # required for deploy
  id-token: write     # required for OIDC

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: Sync CNCF Graduated projects
        run: |
          source .venv/bin/activate
          python tools/sync_projects.py

      - name: Build issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}         # optional
          BUTTONDOWN_API_KEY: ${{ secrets.BUTTONDOWN_API_KEY }} # optional (email)
        run: |
          source .venv/bin/activate
          # Build WITHOUT email send; we want static files only
          python main.py --since '3 days' --out ./build

      - name: Prepare Pages site
        run: |
          set -euo pipefail
          DATE="$(date -u +%F)"
          mkdir -p site/.well-known
          touch site/.nojekyll

          # Archive current issue under dated path
          mkdir -p "site/${DATE}"
          cp build/issue.html "site/${DATE}/index.html"
          cp build/items.json "site/${DATE}/items.json"

          # Make latest available at / (root)
          cp build/issue.html site/index.html
          cp build/items.json site/items.json

          # Optional: simple index page listing archives
          {
            echo "<!doctype html><meta charset='utf-8'><title>CNCF Updates</title>"
            echo "<h1>CNCF Updates</h1>"
            echo "<p>Latest: <a href='./index.html'>Issue ${DATE}</a></p>"
            echo "<h2>Archive</h2><ul>"
            # list all YYYY-MM-DD dirs (sorted)
            for d in $(ls -1 site | grep -E '^[0-9]{4}-[0-9]{2}-[0-9]{2}$' | sort -r); do
              echo "<li><a href='./$d/'>$d</a></li>"
            done
            echo "</ul>"
          } > site/_list.html
          # Link archives from the latest issue footer if you want:
          # (You can also enhance your Jinja template to link _list.html)

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
